
Start zooKeeper:
bin\windows\zookeeper-server-start.bat config\zookeeper.properties

Start kafka Server:
bin\windows\kafka-server-start.bat config\server.properties

create Topic:
bin\windows\kafka-topics.bat --create --topic my-Topic --bootstrap-server localhost:9092

create producer:
bin\windows\kafka-console-producer.bat --topic my-Topic --bootstrap-server localhost:9092

Create consumer:
bin\windows\kafka-console-consumer.bat --topic my-Topic --from-beginning  --bootstrap-server localhost:9092


JAVA Code:
			Creating a Producer:
	-----------Application Properties:-------------
	#Producer Configuration
	server.port=8081 //Optional 

	spring.kafka.producer.bootstrap-servers=localhost:9092
	spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
	spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

			
	-------------SERVICE-------------
	@Service
	public class KafkaService {

	    	@Autowired
    		private KafkaTemplate<String,String> kafkaTemplate;

	    	private Logger logger = LoggerFactory.getLogger(KafkaService.class);

    		public boolean updateLocation(String location){
        		this.logger.info("message Produced!!");
        		this.kafkaTemplate.send(AppConstants.LOCATION_TOPIC_NAME,location);
        		return true;
	    	}

	}
	-------------CONFIG--------------
	
	@Configuration
	public class KafkaConfig {

    	@Bean
    	public NewTopic topic(){
        	return TopicBuilder
                	.name(AppConstants.LOCATION_TOPIC_NAME)
	           //   .partitions()
                   //   .replicas()
                	.build();
    		}
	}

	------CONTROLLER-------------

	@RestController
	@RequestMapping("/location")
	public class LocationController {

   		@Autowired
    		private KafkaService kafkaService;

    		@PostMapping("/update")
    		public ResponseEntity<?> updateLocation(){
        		kafkaService.updateLocation("( "+ Math.round(Math.random()*100) +", "+Math.round(Math.random()*100) +" )" );
        		return new ResponseEntity<>(Map.of("message","Location Updated"), HttpStatus.OK);
    		}

	}

	---------Constants-------------
	
	public class AppConstants {

   		 public static final String LOCATION_TOPIC_NAME = "location-update-topic";

	}

-------------------------------------------------------------------------------------------
					CONSUMER	

Consume the messages produced by console or java Application:

-whatever KafkaService.updateLocation() sends the consumer will receive that data
-we can use kafkaService anywhere, not only in controller.

		-----------Console:-------------------
	-bin\windows\kafka-console-consumer.bat --topic location-update-topic --from-beginning --bootstrap-server localhost:9092

	-example Output:
		( 13, 14 )
		( 92, 96 )
		( 66, 38 )
		( 20, 94 )
		( 63, 88 )
		( 7, 74 )
		( 3, 80 )
		( 54, 27 )
		( 73, 87 )
		( 21, 82 )
		( 57, 39 )
		( 45, 5 )
		( 27, 81 )
		( 47, 61 )
		( 52, 49 )
		( 43, 4 )
		( 97, 70 )

		------------Java Code:---------------------
	
	------------------------Application Properties:---------------------------
	
	spring.kafka.consumer.bootstrap-servers=localhost:9092
	spring.kafka.consumer.group-id=group-id
	spring.kafka.consumer.auto-offset-reset=earliest
	spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
	spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
	
	---------------------Listener:----------------------------
	
	@Configuration
	public class KafkaConsumer {

    		Logger logger = LoggerFactory.getLogger(KafkaConsumer.class);

    		@KafkaListener(topics = AppConstants.LOCATION_UPDATE_TOPIC,groupId = AppConstants.GROUP_ID)
    		public void updatedLocation(String value){

        		logger.info("the method received the value from producer: "+value);
    		}

	}

	----------------------------CONSTANTS-------------------------------

			public class AppConstants {

   				 public static final String LOCATION_UPDATE_TOPIC = "location-update-topic";

   				 public static final String GROUP_ID =  "group-1";

			}



